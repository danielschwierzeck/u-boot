# Copyright Roger Meier <r.meier@siemens.com>
# SPDX-License-Identifier:	GPL-2.0+

# build U-Boot on Travis CI - https://travis-ci.org/

language: c

cache:
 - apt

install:
 # install U-Boot build dependencies
 - sudo apt-get install -qq cppcheck sloccount sparse bc libsdl-dev build-essential
 # install latest device tree compiler
 - git clone --depth=1 https://git.kernel.org/pub/scm/utils/dtc/dtc.git /tmp/dtc
 - make -j4 -C /tmp/dtc
 # prepare buildman environment
 - export BUILDMAN_ROOT="root:"
 - export BUILDMAN_PPC="ppc:"
 - export BUILDMAN_ARM="arm:"
 - export BUILDMAN_SANDBOX="sandbox:"
 - echo -e "[toolchain]\n${BUILDMAN_ROOT} /\n" > ~/.buildman
 - echo -e "${BUILDMAN_PPC} /opt/eldk-5.4/powerpc/sysroots/i686-eldk-linux/usr/bin/powerpc-linux/\n" >> ~/.buildman
 - echo -e "${BUILDMAN_ARM} /opt/eldk-5.4/armv5te/sysroots/i686-eldk-linux/usr/bin/armv5te-linux-gnueabi/\n" >> ~/.buildman
 - echo -e "${BUILDMAN_SANDBOX} /usr/bin/gcc\n" >> ~/.buildman
 - export BUILDMAN_ALIAS="x86:"
 - export BUILDMAN_ALIAS_ARM="arm:"
 - echo -e "\n\n[toolchain-alias]\n${BUILDMAN_ALIAS} i386\n" >> ~/.buildman
 - echo -e "${BUILDMAN_ALIAS_ARM} armv5te\n" >> ~/.buildman
 - cat ~/.buildman

env:
  global:
    - PATH=/tmp/dtc:$PATH
    - BUILD_DIR=build
    - CROSS_COMPILE=""
    - HOSTCC="cc"
    - HOSTCXX="c++"
    - TEST_CONFIG_CMD=""
    - secure: "plp1hCCNNinXPGvtsXeOLVGg8zFmhr5NtJweGj+wRJdxJbl4pJtksM1qDZs+VMWpGQSLwwmSIHEIrNDt+RCjg+49OmCnPeTNH+U73hPHHEL+cIj+MG97KR4IlDi3xFRGVqv1ukof85ZaONfa8tL6HZeU4gJYvdl3APK79FdHTyM="

before_script:
  # install toolchains based on INSTALL_TOOLCHAIN} variable
  - if [[ "${INSTALL_TOOLCHAIN}" == *arm* ]]; then wget ftp://ftp.denx.de/pub/eldk/5.4/targets/armv5te/eldk-eglibc-i686-arm-toolchain-gmae-5.4.sh ; fi
  - if [[ "${INSTALL_TOOLCHAIN}" == *arm* ]]; then sh eldk-eglibc-i686-arm-toolchain-gmae-5.4.sh -y ; fi
  - if [[ "${INSTALL_TOOLCHAIN}" == *arm* ]]; then ls -al /opt/eldk-5.4/armv5te/sysroots/i686-eldk-linux/usr/bin/armv5te-linux-gnueabi ; fi
  - if [[ "${INSTALL_TOOLCHAIN}" == *avr32* ]]; then ./tools/buildman/buildman --fetch-arch avr32 ; fi
  - if [[ "${INSTALL_TOOLCHAIN}" == *i386* ]]; then ./tools/buildman/buildman sandbox --fetch-arch i386 ; fi
  - if [[ "${INSTALL_TOOLCHAIN}" == *m68k* ]]; then ./tools/buildman/buildman --fetch-arch m68k ; fi
  - if [[ "${INSTALL_TOOLCHAIN}" == *mips* ]]; then ./tools/buildman/buildman --fetch-arch mips ; fi
  - if [[ "${INSTALL_TOOLCHAIN}" == *ppc* ]]; then wget ftp://ftp.denx.de/pub/eldk/5.4/targets/powerpc/eldk-eglibc-i686-powerpc-toolchain-gmae-5.4.sh ; fi
  - if [[ "${INSTALL_TOOLCHAIN}" == *ppc* ]]; then sh eldk-eglibc-i686-powerpc-toolchain-gmae-5.4.sh -y ; fi

script:
 # the execution sequence for each test
 - echo ${TEST_CONFIG_CMD}
 - ${TEST_CONFIG_CMD}
 - echo ${TEST_CMD}
 - ${TEST_CMD}

matrix:
  include:
  # we need to build by vendor due to 50min time limit for builds
  # each env setting here is a dedicated build
    - env:
        - TEST_CONFIG_CMD="make sandbox_defconfig"
          TEST_CMD="make -j4"
          HOSTCC  = "gcc"
          HOSTCXX  = "g++"
    - env:
        - TEST_CONFIG_CMD="make sandbox_defconfig"
          TEST_CMD="make -j4"
          HOSTCC  = "clang"
          HOSTCXX  = "clang++"
    - env:
        - TEST_CONFIG_CMD="tools/buildman/buildman --list-tool-chains"
          TEST_CMD="tools/buildman/buildman mips"
          INSTALL_TOOLCHAIN="mips"

notifications:
  email: daniel.schwierzeck@gmail.com

addons:
  coverity_scan:
    project:
      name: "danielschwierzeck/u-boot"
      description: "U-Boot for Lantiq SoC devices"
    notification_email: daniel.schwierzeck@gmail.com
    build_command_prepend: "make sandbox_defconfig"
    build_command:   "make -j4"
    branch_pattern: coverity_scan
